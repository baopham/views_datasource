<?php
// $Id$

/**
 * @file
 * Module definition for views_xml
 *
 * @see views_xml.views.inc
 */


function views_xml_views_api() {
  return array(
    'api' => 2,
  );
}


/**
 * Strips illegal Unicode characters and encodes entities in string
 *
 * @param $input
 *   String to process.
 * @return
 *   String with illegal characters stripped away and entities encoded.
 */
function views_xml_strip_illegal_chars($input) {
  $output = preg_replace('/\x((10?|[2-F])FFF[EF]|FDD[0-9A-F]|[19][0-9A-F]|7F|8[0-46-9A-F]|0?[1-8BCEF])/', '', $input);
  $output = str_replace('"', '&quot;', $output);      // encode quote
  $output = str_replace('&', '&amp;', $output);       // encode ampersand
  $output = str_replace("'", '&apos;', $output);      // encode apostrophe
  $output = str_replace('<', '&lt;', $output);        // encode left-angled bracket
  $output = str_replace('>', '&rt;', $output);        // encode right-angled bracket
  return $output;
}


/**
 * If input is a serialized date array, return a date string
 *
 * @param $input
 *   Input to check.
 * @return
 *   Either the original input or a date string.
 */
function views_xml_is_date($input) {
  if (strpos($input, 'a:3:{s:5:"month"') !== 0) {
    return $input;
  }
  else {        // serialized date array
    $date = unserialize($input);
    return format_date(mktime(0, 0, 0, $date['month'], $date['day'], $date['year']), 'custom', DATE_ISO8601);
  }
}
