<?php
// $Id$

/**
 * @file
 * Module definition for views_xhtml
 *
 * @see views_xhtml.views.inc
 */


function views_xhtml_views_api() {
  return array(
    'api' => 2,
  );
}


/**
 * Strips illegal Unicode characters and encodes entities in string.
 *
 * @param $input
 *   String to process.
 * @return
 *   String with illegal characters stripped away and entities encoded.
 */
function views_xhtml_strip_illegal_chars($input) {
  $output = preg_replace(
              '/[\x{80}-\x{A0}'.      // Non-printable ISO-8859-1 + NBSP
              '\x{01}-\x{1F}'.        // Non-printable ASCII characters
              '\x{AD}'.               // Soft-hyphen
              '\x{2000}-\x{200F}'.    // Various space characters
              '\x{2028}-\x{202F}'.    // Bidirectional text overrides
              '\x{205F}-\x{206F}'.    // Various text hinting characters
              '\x{FEFF}'.             // Byte order mark
              '\x{FF01}-\x{FF60}'.    // Full-width latin
              '\x{FFF9}-\x{FFFD}'.    // Replacement characters
              '\x{0}]/u',             // NULL byte
            '', $input);
  $output = str_replace('"', '&quot;', $output);      // encode quote
  $output = str_replace('&', '&amp;', $output);       // encode ampersand
  $output = str_replace("'", '&apos;', $output);      // encode apostrophe
  $output = str_replace('<', '&lt;', $output);        // encode left-angled bracket
  $output = str_replace('>', '&rt;', $output);        // encode right-angled bracket
  return $output;
}


/**
 * If input is a serialized date array, return a date string
 *
 * @param $input
 *   Input to check.
 * @return
 *   Either the original input or a date string.
 */
function views_xhtml_is_date($input) {
  if (strpos($input, 'a:3:{s:5:"month"') !== 0) {
    return $input;
  }
  else {        // serialized date array
    $date = unserialize($input);
    return format_date(mktime(0, 0, 0, $date['month'], $date['day'], $date['year']), 'custom', DATE_ISO8601);
  }
}
